/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 3.29.0
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.service;

import com.gridly.api.client.ApiException;
import com.gridly.api.model.DeleteRecord;
import com.gridly.api.model.FetchFileOption;
import com.gridly.api.model.Record;
import com.gridly.api.model.SetRecord;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RecordApi
 */
@Disabled
public class RecordApiTest {

    private final RecordApi api = new RecordApi();

    /**
     * create
     *
     * create
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String viewId = null;
        List<SetRecord> setRecord = null;
        List<Record> response = api.create(viewId, setRecord);
        // TODO: test validations
    }

    /**
     * delete
     *
     * delete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String viewId = null;
        DeleteRecord deleteRecord = null;
        api.delete(viewId, deleteRecord);
        // TODO: test validations
    }

    /**
     * fetch
     *
     * fetch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchTest() throws ApiException {
        String viewId = null;
        List<String> columnIds = null;
        String page = null;
        String query = null;
        String sort = null;
        FetchFileOption fetchFileOption = null;
        List<Record> response = api.fetch(viewId, columnIds, page, query, sort, fetchFileOption);
        // TODO: test validations
    }

    /**
     * update
     *
     * update
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String viewId = null;
        List<SetRecord> setRecord = null;
        List<Record> response = api.update(viewId, setRecord);
        // TODO: test validations
    }

    /**
     * updateRecord
     *
     * updateRecord
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRecordTest() throws ApiException {
        String id = null;
        String viewId = null;
        SetRecord setRecord = null;
        String path = null;
        Record response = api.updateRecord(id, viewId, setRecord, path);
        // TODO: test validations
    }

}

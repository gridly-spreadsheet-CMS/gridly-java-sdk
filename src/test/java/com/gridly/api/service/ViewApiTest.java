/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 3.31.0
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.service;

import com.gridly.api.client.ApiException;
import com.gridly.api.model.CreateView;
import com.gridly.api.model.ExportFileHeader;
import java.io.File;
import com.gridly.api.model.Task;
import com.gridly.api.model.View;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ViewApi
 */
@Disabled
public class ViewApiTest {

    private final ViewApi api = new ViewApi();

    /**
     * list
     *
     * list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callListTest() throws ApiException {
        String branchId = null;
        String gridId = null;
        String type = null;
        List<View> response = api.callList(branchId, gridId, type);
        // TODO: test validations
    }

    /**
     * create
     *
     * create
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        CreateView createView = null;
        View response = api.create(createView);
        // TODO: test validations
    }

    /**
     * export
     *
     * export
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportTest() throws ApiException {
        String viewId = null;
        List<String> columnIds = null;
        ExportFileHeader fileHeader = null;
        String query = null;
        String sort = null;
        String type = null;
        File response = api.export(viewId, columnIds, fileHeader, query, sort, type);
        // TODO: test validations
    }

    /**
     * get
     *
     * get
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        String viewId = null;
        List<String> columnIds = null;
        List<String> include = null;
        String page = null;
        String query = null;
        String sort = null;
        View response = api.get(viewId, columnIds, include, page, query, sort);
        // TODO: test validations
    }

    /**
     * importView
     *
     * importView
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importViewTest() throws ApiException {
        String viewId = null;
        File _file = null;
        String importRequest = null;
        String type = null;
        api.importView(viewId, _file, importRequest, type);
        // TODO: test validations
    }

    /**
     * merge
     *
     * merge
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mergeTest() throws ApiException {
        String destinationViewId = null;
        String viewId = null;
        List<String> mergeRecordOptions = null;
        Task response = api.merge(destinationViewId, viewId, mergeRecordOptions);
        // TODO: test validations
    }

}

/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.29.1
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ExportFileHeader
 */
@JsonAdapter(ExportFileHeader.Adapter.class)
public enum ExportFileHeader {
  
  none("none"),
  
  columnName("columnName"),
  
  columnId("columnId");

  private String value;

  ExportFileHeader(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ExportFileHeader fromValue(String value) {
    for (ExportFileHeader b : ExportFileHeader.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ExportFileHeader> {
    @Override
    public void write(final JsonWriter jsonWriter, final ExportFileHeader enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ExportFileHeader read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ExportFileHeader.fromValue(value);
    }
  }
}


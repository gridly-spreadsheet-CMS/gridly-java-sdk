/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.33.0
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gridly.api.model.TranslationStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.gridly.api.client.JSON;

/**
 * TransMem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransMem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROJECT_IDS = "projectIds";
  @SerializedName(SERIALIZED_NAME_PROJECT_IDS)
  private List<Long> projectIds = null;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_IS_PAUSED_CONSUMING = "isPausedConsuming";
  @SerializedName(SERIALIZED_NAME_IS_PAUSED_CONSUMING)
  private Boolean isPausedConsuming;

  public static final String SERIALIZED_NAME_POPULATE_TRANSLATION_STATUS = "populateTranslationStatus";
  @SerializedName(SERIALIZED_NAME_POPULATE_TRANSLATION_STATUS)
  private TranslationStatus populateTranslationStatus;

  public static final String SERIALIZED_NAME_CONTEXT_LOOKUP = "contextLookup";
  @SerializedName(SERIALIZED_NAME_CONTEXT_LOOKUP)
  private Boolean contextLookup;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FUZZY_MATCH = "fuzzyMatch";
  @SerializedName(SERIALIZED_NAME_FUZZY_MATCH)
  private Boolean fuzzyMatch;

  public static final String SERIALIZED_NAME_ALLOW_ALTERNATIVE = "allowAlternative";
  @SerializedName(SERIALIZED_NAME_ALLOW_ALTERNATIVE)
  private Boolean allowAlternative;

  public static final String SERIALIZED_NAME_ALLOW_ALTERNATIVE_HAS_SAME_RECORD_ID = "allowAlternativeHasSameRecordId";
  @SerializedName(SERIALIZED_NAME_ALLOW_ALTERNATIVE_HAS_SAME_RECORD_ID)
  private Boolean allowAlternativeHasSameRecordId;

  public TransMem() {
  }

  public TransMem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public TransMem projectIds(List<Long> projectIds) {
    
    this.projectIds = projectIds;
    return this;
  }

  public TransMem addProjectIdsItem(Long projectIdsItem) {
    if (this.projectIds == null) {
      this.projectIds = new ArrayList<>();
    }
    this.projectIds.add(projectIdsItem);
    return this;
  }

   /**
   * Get projectIds
   * @return projectIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Long> getProjectIds() {
    return projectIds;
  }


  public void setProjectIds(List<Long> projectIds) {
    this.projectIds = projectIds;
  }


  public TransMem isDisabled(Boolean isDisabled) {
    
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isIsDisabled() {
    return isDisabled;
  }


  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public TransMem isPausedConsuming(Boolean isPausedConsuming) {
    
    this.isPausedConsuming = isPausedConsuming;
    return this;
  }

   /**
   * Get isPausedConsuming
   * @return isPausedConsuming
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isIsPausedConsuming() {
    return isPausedConsuming;
  }


  public void setIsPausedConsuming(Boolean isPausedConsuming) {
    this.isPausedConsuming = isPausedConsuming;
  }


  public TransMem populateTranslationStatus(TranslationStatus populateTranslationStatus) {
    
    this.populateTranslationStatus = populateTranslationStatus;
    return this;
  }

   /**
   * Get populateTranslationStatus
   * @return populateTranslationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TranslationStatus getPopulateTranslationStatus() {
    return populateTranslationStatus;
  }


  public void setPopulateTranslationStatus(TranslationStatus populateTranslationStatus) {
    this.populateTranslationStatus = populateTranslationStatus;
  }


  public TransMem contextLookup(Boolean contextLookup) {
    
    this.contextLookup = contextLookup;
    return this;
  }

   /**
   * Get contextLookup
   * @return contextLookup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isContextLookup() {
    return contextLookup;
  }


  public void setContextLookup(Boolean contextLookup) {
    this.contextLookup = contextLookup;
  }


  public TransMem name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TransMem description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TransMem fuzzyMatch(Boolean fuzzyMatch) {
    
    this.fuzzyMatch = fuzzyMatch;
    return this;
  }

   /**
   * Get fuzzyMatch
   * @return fuzzyMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isFuzzyMatch() {
    return fuzzyMatch;
  }


  public void setFuzzyMatch(Boolean fuzzyMatch) {
    this.fuzzyMatch = fuzzyMatch;
  }


  public TransMem allowAlternative(Boolean allowAlternative) {
    
    this.allowAlternative = allowAlternative;
    return this;
  }

   /**
   * Get allowAlternative
   * @return allowAlternative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isAllowAlternative() {
    return allowAlternative;
  }


  public void setAllowAlternative(Boolean allowAlternative) {
    this.allowAlternative = allowAlternative;
  }


  public TransMem allowAlternativeHasSameRecordId(Boolean allowAlternativeHasSameRecordId) {
    
    this.allowAlternativeHasSameRecordId = allowAlternativeHasSameRecordId;
    return this;
  }

   /**
   * Get allowAlternativeHasSameRecordId
   * @return allowAlternativeHasSameRecordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isAllowAlternativeHasSameRecordId() {
    return allowAlternativeHasSameRecordId;
  }


  public void setAllowAlternativeHasSameRecordId(Boolean allowAlternativeHasSameRecordId) {
    this.allowAlternativeHasSameRecordId = allowAlternativeHasSameRecordId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransMem transMem = (TransMem) o;
    return Objects.equals(this.id, transMem.id) &&
        Objects.equals(this.projectIds, transMem.projectIds) &&
        Objects.equals(this.isDisabled, transMem.isDisabled) &&
        Objects.equals(this.isPausedConsuming, transMem.isPausedConsuming) &&
        Objects.equals(this.populateTranslationStatus, transMem.populateTranslationStatus) &&
        Objects.equals(this.contextLookup, transMem.contextLookup) &&
        Objects.equals(this.name, transMem.name) &&
        Objects.equals(this.description, transMem.description) &&
        Objects.equals(this.fuzzyMatch, transMem.fuzzyMatch) &&
        Objects.equals(this.allowAlternative, transMem.allowAlternative) &&
        Objects.equals(this.allowAlternativeHasSameRecordId, transMem.allowAlternativeHasSameRecordId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectIds, isDisabled, isPausedConsuming, populateTranslationStatus, contextLookup, name, description, fuzzyMatch, allowAlternative, allowAlternativeHasSameRecordId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransMem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    isPausedConsuming: ").append(toIndentedString(isPausedConsuming)).append("\n");
    sb.append("    populateTranslationStatus: ").append(toIndentedString(populateTranslationStatus)).append("\n");
    sb.append("    contextLookup: ").append(toIndentedString(contextLookup)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fuzzyMatch: ").append(toIndentedString(fuzzyMatch)).append("\n");
    sb.append("    allowAlternative: ").append(toIndentedString(allowAlternative)).append("\n");
    sb.append("    allowAlternativeHasSameRecordId: ").append(toIndentedString(allowAlternativeHasSameRecordId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("projectIds");
    openapiFields.add("isDisabled");
    openapiFields.add("isPausedConsuming");
    openapiFields.add("populateTranslationStatus");
    openapiFields.add("contextLookup");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("fuzzyMatch");
    openapiFields.add("allowAlternative");
    openapiFields.add("allowAlternativeHasSameRecordId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TransMem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TransMem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransMem is not found in the empty JSON string", TransMem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TransMem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransMem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TransMem.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectIds") != null && !jsonObj.get("projectIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectIds` to be an array in the JSON string but got `%s`", jsonObj.get("projectIds").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransMem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransMem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransMem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransMem.class));

       return (TypeAdapter<T>) new TypeAdapter<TransMem>() {
           @Override
           public void write(JsonWriter out, TransMem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransMem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransMem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransMem
  * @throws IOException if the JSON string is invalid with respect to TransMem
  */
  public static TransMem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransMem.class);
  }

 /**
  * Convert an instance of TransMem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


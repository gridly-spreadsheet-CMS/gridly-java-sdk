/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.21.5
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gridly.api.model.DateTimeFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.gridly.api.client.JSON;

/**
 * UpdateGridSetting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateGridSetting implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DEFAULT_DATE_TIME_FORMAT = "defaultDateTimeFormat";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DATE_TIME_FORMAT)
  private DateTimeFormat defaultDateTimeFormat;

  /**
   * Gets or Sets defaultSourceLanguageStatus
   */
  @JsonAdapter(DefaultSourceLanguageStatusEnum.Adapter.class)
  public enum DefaultSourceLanguageStatusEnum {
    UNSET("unset"),
    
    DONOTTRANSLATE("doNotTranslate"),
    
    NOTREADYFORTRANSLATION("notReadyForTranslation"),
    
    READYFORTRANSLATION("readyForTranslation"),
    
    LOCKED("locked");

    private String value;

    DefaultSourceLanguageStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultSourceLanguageStatusEnum fromValue(String value) {
      for (DefaultSourceLanguageStatusEnum b : DefaultSourceLanguageStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DefaultSourceLanguageStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultSourceLanguageStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultSourceLanguageStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DefaultSourceLanguageStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_SOURCE_LANGUAGE_STATUS = "defaultSourceLanguageStatus";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SOURCE_LANGUAGE_STATUS)
  private DefaultSourceLanguageStatusEnum defaultSourceLanguageStatus;

  public static final String SERIALIZED_NAME_TRANSLATOR_CAN_VIEW_AUTOMATIONS = "translatorCanViewAutomations";
  @SerializedName(SERIALIZED_NAME_TRANSLATOR_CAN_VIEW_AUTOMATIONS)
  private Boolean translatorCanViewAutomations;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public UpdateGridSetting() {
  }

  public UpdateGridSetting defaultDateTimeFormat(DateTimeFormat defaultDateTimeFormat) {
    
    this.defaultDateTimeFormat = defaultDateTimeFormat;
    return this;
  }

   /**
   * Get defaultDateTimeFormat
   * @return defaultDateTimeFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DateTimeFormat getDefaultDateTimeFormat() {
    return defaultDateTimeFormat;
  }


  public void setDefaultDateTimeFormat(DateTimeFormat defaultDateTimeFormat) {
    this.defaultDateTimeFormat = defaultDateTimeFormat;
  }


  public UpdateGridSetting defaultSourceLanguageStatus(DefaultSourceLanguageStatusEnum defaultSourceLanguageStatus) {
    
    this.defaultSourceLanguageStatus = defaultSourceLanguageStatus;
    return this;
  }

   /**
   * Get defaultSourceLanguageStatus
   * @return defaultSourceLanguageStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DefaultSourceLanguageStatusEnum getDefaultSourceLanguageStatus() {
    return defaultSourceLanguageStatus;
  }


  public void setDefaultSourceLanguageStatus(DefaultSourceLanguageStatusEnum defaultSourceLanguageStatus) {
    this.defaultSourceLanguageStatus = defaultSourceLanguageStatus;
  }


  public UpdateGridSetting translatorCanViewAutomations(Boolean translatorCanViewAutomations) {
    
    this.translatorCanViewAutomations = translatorCanViewAutomations;
    return this;
  }

   /**
   * Get translatorCanViewAutomations
   * @return translatorCanViewAutomations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isTranslatorCanViewAutomations() {
    return translatorCanViewAutomations;
  }


  public void setTranslatorCanViewAutomations(Boolean translatorCanViewAutomations) {
    this.translatorCanViewAutomations = translatorCanViewAutomations;
  }


  public UpdateGridSetting metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public UpdateGridSetting putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateGridSetting updateGridSetting = (UpdateGridSetting) o;
    return Objects.equals(this.defaultDateTimeFormat, updateGridSetting.defaultDateTimeFormat) &&
        Objects.equals(this.defaultSourceLanguageStatus, updateGridSetting.defaultSourceLanguageStatus) &&
        Objects.equals(this.translatorCanViewAutomations, updateGridSetting.translatorCanViewAutomations) &&
        Objects.equals(this.metadata, updateGridSetting.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultDateTimeFormat, defaultSourceLanguageStatus, translatorCanViewAutomations, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateGridSetting {\n");
    sb.append("    defaultDateTimeFormat: ").append(toIndentedString(defaultDateTimeFormat)).append("\n");
    sb.append("    defaultSourceLanguageStatus: ").append(toIndentedString(defaultSourceLanguageStatus)).append("\n");
    sb.append("    translatorCanViewAutomations: ").append(toIndentedString(translatorCanViewAutomations)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultDateTimeFormat");
    openapiFields.add("defaultSourceLanguageStatus");
    openapiFields.add("translatorCanViewAutomations");
    openapiFields.add("metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UpdateGridSetting
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (UpdateGridSetting.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateGridSetting is not found in the empty JSON string", UpdateGridSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UpdateGridSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateGridSetting` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `defaultDateTimeFormat`
      if (jsonObj.get("defaultDateTimeFormat") != null && !jsonObj.get("defaultDateTimeFormat").isJsonNull()) {
        DateTimeFormat.validateJsonObject(jsonObj.getAsJsonObject("defaultDateTimeFormat"));
      }
      if ((jsonObj.get("defaultSourceLanguageStatus") != null && !jsonObj.get("defaultSourceLanguageStatus").isJsonNull()) && !jsonObj.get("defaultSourceLanguageStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultSourceLanguageStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultSourceLanguageStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateGridSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateGridSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateGridSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateGridSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateGridSetting>() {
           @Override
           public void write(JsonWriter out, UpdateGridSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateGridSetting read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateGridSetting given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateGridSetting
  * @throws IOException if the JSON string is invalid with respect to UpdateGridSetting
  */
  public static UpdateGridSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateGridSetting.class);
  }

 /**
  * Convert an instance of UpdateGridSetting to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


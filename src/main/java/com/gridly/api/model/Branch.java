/*
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 3.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gridly.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gridly.api.model.ViewColumn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

/**
 * Branch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Branch implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<ViewColumn> columns = null;

  public static final String SERIALIZED_NAME_DEFAULT_ACCESS_VIEW_ID = "defaultAccessViewId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ACCESS_VIEW_ID)
  private String defaultAccessViewId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_MASTER = "isMaster";
  @SerializedName(SERIALIZED_NAME_IS_MASTER)
  private Boolean isMaster;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;


  public Branch columns(List<ViewColumn> columns) {
    
    this.columns = columns;
    return this;
  }

  public Branch addColumnsItem(ViewColumn columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ViewColumn> getColumns() {
    return columns;
  }


  public void setColumns(List<ViewColumn> columns) {
    this.columns = columns;
  }


  public Branch defaultAccessViewId(String defaultAccessViewId) {
    
    this.defaultAccessViewId = defaultAccessViewId;
    return this;
  }

   /**
   * Get defaultAccessViewId
   * @return defaultAccessViewId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefaultAccessViewId() {
    return defaultAccessViewId;
  }


  public void setDefaultAccessViewId(String defaultAccessViewId) {
    this.defaultAccessViewId = defaultAccessViewId;
  }


  public Branch description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Branch id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Branch isMaster(Boolean isMaster) {
    
    this.isMaster = isMaster;
    return this;
  }

   /**
   * Get isMaster
   * @return isMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean isIsMaster() {
    return isMaster;
  }


  public void setIsMaster(Boolean isMaster) {
    this.isMaster = isMaster;
  }


  public Branch metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public Branch putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public Branch name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Branch branch = (Branch) o;
    return Objects.equals(this.columns, branch.columns) &&
        Objects.equals(this.defaultAccessViewId, branch.defaultAccessViewId) &&
        Objects.equals(this.description, branch.description) &&
        Objects.equals(this.id, branch.id) &&
        Objects.equals(this.isMaster, branch.isMaster) &&
        Objects.equals(this.metadata, branch.metadata) &&
        Objects.equals(this.name, branch.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, defaultAccessViewId, description, id, isMaster, metadata, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Branch {\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    defaultAccessViewId: ").append(toIndentedString(defaultAccessViewId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isMaster: ").append(toIndentedString(isMaster)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

